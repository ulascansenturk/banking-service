// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package constants

import (
	"errors"
	"fmt"
)

const (
	// CurrencyCodeTRY is a CurrencyCode of type TRY.
	CurrencyCodeTRY CurrencyCode = "TRY"
	// CurrencyCodeUSD is a CurrencyCode of type USD.
	CurrencyCodeUSD CurrencyCode = "USD"
	// CurrencyCodeEUR is a CurrencyCode of type EUR.
	CurrencyCodeEUR CurrencyCode = "EUR"
)

var ErrInvalidCurrencyCode = errors.New("not a valid CurrencyCode")

// String implements the Stringer interface.
func (x CurrencyCode) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x CurrencyCode) IsValid() bool {
	_, err := ParseCurrencyCode(string(x))
	return err == nil
}

var _CurrencyCodeValue = map[string]CurrencyCode{
	"TRY": CurrencyCodeTRY,
	"USD": CurrencyCodeUSD,
	"EUR": CurrencyCodeEUR,
}

// ParseCurrencyCode attempts to convert a string to a CurrencyCode.
func ParseCurrencyCode(name string) (CurrencyCode, error) {
	if x, ok := _CurrencyCodeValue[name]; ok {
		return x, nil
	}
	return CurrencyCode(""), fmt.Errorf("%s is %w", name, ErrInvalidCurrencyCode)
}
