// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package constants

import (
	"errors"
	"fmt"
)

const (
	// TransactionStatusPENDING is a TransactionStatus of type PENDING.
	TransactionStatusPENDING TransactionStatus = "PENDING"
	// TransactionStatusSUCCESS is a TransactionStatus of type SUCCESS.
	TransactionStatusSUCCESS TransactionStatus = "SUCCESS"
	// TransactionStatusFAILURE is a TransactionStatus of type FAILURE.
	TransactionStatusFAILURE TransactionStatus = "FAILURE"
)

var ErrInvalidTransactionStatus = errors.New("not a valid TransactionStatus")

// String implements the Stringer interface.
func (x TransactionStatus) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x TransactionStatus) IsValid() bool {
	_, err := ParseTransactionStatus(string(x))
	return err == nil
}

var _TransactionStatusValue = map[string]TransactionStatus{
	"PENDING": TransactionStatusPENDING,
	"SUCCESS": TransactionStatusSUCCESS,
	"FAILURE": TransactionStatusFAILURE,
}

// ParseTransactionStatus attempts to convert a string to a TransactionStatus.
func ParseTransactionStatus(name string) (TransactionStatus, error) {
	if x, ok := _TransactionStatusValue[name]; ok {
		return x, nil
	}
	return TransactionStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidTransactionStatus)
}
