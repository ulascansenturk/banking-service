// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"
	transactions "ulascansenturk/service/internal/transactions"

	mock "github.com/stretchr/testify/mock"
)

// MockFinderOrCreator is an autogenerated mock type for the FinderOrCreator type
type MockFinderOrCreator struct {
	mock.Mock
}

// Call provides a mock function with given fields: ctx, params
func (_m *MockFinderOrCreator) Call(ctx context.Context, params *transactions.DBTransaction) (*transactions.Transaction, error) {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for Call")
	}

	var r0 *transactions.Transaction
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *transactions.DBTransaction) (*transactions.Transaction, error)); ok {
		return rf(ctx, params)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *transactions.DBTransaction) *transactions.Transaction); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*transactions.Transaction)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *transactions.DBTransaction) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockFinderOrCreator creates a new instance of MockFinderOrCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFinderOrCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFinderOrCreator {
	mock := &MockFinderOrCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
